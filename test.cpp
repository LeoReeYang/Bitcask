#include "bitcask.hpp"
#include <thread>
#include <chrono>
#include <vector>
#include <pthread.h>

using namespace std;

string text = string

string a = "1";

string text1 = string("Cy is the fxxking God!!");
string text2 = string("Cy is the fxxking God..");

void invoc1(Bitcask &test)
{
    for (int i = 0; i < 100; i++)
    {
        string key = std::to_string(i); //, value1 = "Cy is the fxxking God!";
        test.set(key, text1);           // key + to_string(rand())
    }
}

void invoc2(Bitcask &test)
{
    for (int i = 100; i > 0; i--)
    {
        string key = std::to_string(i); //, value1 = "Cy the fxxking God!";
        test.set(key, text2);
    }
}

int main()
{
    Bitcask test;
    auto t1 = std::chrono::high_resolution_clock::now();

    // test.set("1", text1);
    // test.set("1", text1);
    // test.set("1", text1);
    // test.set("1", text1);
    // test.set("2", text1);
    // test.set("1", text1);
    // test.set("1", text1);
    // test.set("1", text1);
    // test.set("1", text1);

    std::vector<std::thread> threads;
    threads.emplace_back(invoc1, std::ref(test));
    threads.emplace_back(invoc2, std::ref(test));
    // threads.emplace_back(invoc1, std::ref(test));
    // threads.emplace_back(invoc2, std::ref(test));

    for (auto &thread : threads)
        thread.join();
    string value;
    test.get("2", &value);
    cout << value << endl;

    auto t2 = std::chrono::high_resolution_clock::now();

    std::chrono::duration<double, std::milli> fp_ms = t2 - t1;

    std::cout << "time cost: " << fp_ms.count() << " ms" << endl;

    std::cout << "====================================" << endl
              << "recovery data from log:" << endl;

    return 0;
}